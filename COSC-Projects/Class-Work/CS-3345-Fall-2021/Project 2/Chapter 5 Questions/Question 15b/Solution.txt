To start with we are assuming  0<k<N. 
Our first step is to hash the value of the string we are looking for. We could do this by turing all the
characters into their ASCII values and add them together for example. This would be O(k) for the complexity since
we would need a for loop to loop through the string to get each character. Our next step would be to go through
the Longer string of length N, and using a for loop, for length k add those ASCII values together and store it in an array.
This complexity would be O(N+k) for the loop goining through the longer string, and adding the ASCII values of the first
k characters together. Then we would have a seperate loop thatwould go through the array looking at all values in that
table that equal the value we got from the k length string.If we find a match we could use .compareTo if its a string 
or use a loop to compare character by character to see if the strings match. The complexity of this would be at worse
O(k+N) because if every spot in the array matched the ASCII value but did not match the strings except for the very last
one then the complexity of the two loops would be added together will be k+N.