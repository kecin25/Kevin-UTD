# Project 1 - BitMap
# By Kevin Boudreaux - KCB180002
# 11/3/2021
#Instructions:
# Go to Tools -> Bitmap Display
#	set pixal dim to 4x4
#	set display dim to 256x256
#
# Go to Tool -> Keyboard and Display MMIO Simulator
#	use w for up, d for left, s for down, a for left, and space to quite
#	goal of the game is to reach the end point that is marked in green
# Connect to MIPS and run

#constants
.eqv 	WIDTH 64			#weidth && height = 256 / 4 =64
.eqv 	HEIGHT 64
.eqv 	MEM 0x10010000			#mem address of pixel (0)


#colors
.eqv	WHITE	0x00FFFFFF
.eqv	BLACK 	0x00000000
.eqv	GREEN 	0x0000FF00
.eqv 	RED 	0x00FF0000

#Position of the walls
.data
.space 65536				#used to keep the Bitmap from being overwritten
walls:  .word 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 77, 109, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 253, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 322, 324, 379, 381, 383, 384, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 450, 452, 454, 457, 479, 481, 483, 505, 507, 509, 511, 512, 514, 516, 518, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 545, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 573, 575, 576, 578, 580, 582, 584, 605, 607, 609, 611, 631, 633, 635, 637, 639, 640, 642, 644, 646, 648, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 669, 671, 673, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 695, 697, 699, 701, 703, 704, 706, 708, 710, 712, 716, 718, 731, 733, 735, 739, 741, 743, 757, 761, 763, 765, 767, 768, 770, 772, 774, 776, 778, 780, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 797, 799, 801, 803, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 823, 825, 827, 829, 831, 832, 834, 836, 838, 840, 842, 844, 846, 848, 857, 859, 863, 865, 867, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 887, 889, 891, 893, 895, 896, 898, 900, 902, 906, 908, 910, 914, 915, 917, 918, 919, 923, 925, 927, 929, 931, 933, 947, 949, 951, 953, 955, 956, 957, 959, 960, 962, 964, 966, 968, 970, 972, 976, 978, 983, 985, 987, 989, 991, 993, 995, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1017, 1019, 1021, 1023, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 1038, 1040, 1042, 1044, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1079, 1081, 1085, 1087, 1088, 1090, 1094, 1096, 1098, 1102, 1104, 1106, 1108, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1147, 1149, 1151, 1152, 1154, 1156, 1158, 1160, 1162, 1164, 1166, 1168, 1170, 1175, 1177, 1179, 1181, 1183, 1185, 1209, 1211, 1213, 1215, 1216, 1218, 1220, 1222, 1224, 1226, 1228, 1230, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1243, 1245, 1247, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1275, 1277, 1279, 1280, 1282, 1284, 1286, 1288, 1290, 1292, 1294, 1296, 1305, 1307, 1309, 1311, 1313, 1315, 1335, 1337, 1339, 1341, 1343, 1344, 1345, 1346, 1348, 1350, 1352, 1356, 1358, 1360, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1373, 1377, 1379, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1401, 1403, 1405, 1407, 1408, 1410, 1412, 1414, 1416, 1418, 1420, 1422, 1435, 1437, 1439, 1441, 1443, 1445, 1461, 1463, 1464, 1465, 1467, 1469, 1471, 1472, 1474, 1476, 1478, 1480, 1482, 1484, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1503, 1505, 1507, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1525, 1527, 1531, 1533, 1535, 1536, 1538, 1540, 1544, 1546, 1565, 1567, 1569, 1571, 1573, 1575, 1587, 1589, 1591, 1593, 1595, 1597, 1599, 1600, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1635, 1637, 1639, 1641, 1643, 1645, 1646, 1647, 1648, 1649, 1651, 1653, 1655, 1657, 1659, 1661, 1663, 1664, 1666, 1668, 1669, 1670, 1695, 1697, 1699, 1701, 1705, 1707, 1709, 1713, 1715, 1717, 1719, 1721, 1723, 1725, 1727, 1728, 1730, 1732, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1761, 1763, 1765, 1767, 1769, 1771, 1773, 1775, 1777, 1779, 1781, 1783, 1785, 1787, 1789, 1791, 1792, 1794, 1796, 1798, 1800, 1821, 1823, 1825, 1827, 1828, 1829, 1831, 1833, 1835, 1837, 1839, 1841, 1843, 1845, 1847, 1849, 1850, 1851, 1853, 1855, 1856, 1858, 1860, 1862, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1887, 1889, 1891, 1893, 1895, 1897, 1899, 1901, 1903, 1905, 1907, 1909, 1911, 1913, 1915, 1917, 1919, 1920, 1922, 1924, 1926, 1928, 1930, 1947, 1949, 1951, 1953, 1955, 1957, 1959, 1965, 1966, 1967, 1971, 1973, 1975, 1977, 1979, 1981, 1983, 1984, 1986, 1988, 1990, 1992, 1994, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2013, 2015, 2017, 2019, 2021, 2023, 2025, 2027, 2029, 2031, 2033, 2035, 2037, 2039, 2041, 2043, 2045, 2046, 2047, 2048, 2050, 2052, 2054, 2058, 2060, 2073, 2075, 2077, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2101, 2103, 2105, 2107, 2109, 2111, 2112, 2114, 2116, 2118, 2120, 2122, 2124, 2126, 2127, 2128, 2129, 2130, 2132, 2133, 2134, 2135, 2137, 2139, 2141, 2143, 2145, 2147, 2151, 2153, 2157, 2159, 2161, 2163, 2165, 2167, 2169, 2171, 2173, 2175, 2176, 2178, 2180, 2182, 2184, 2186, 2188, 2189, 2190, 2199, 2201, 2203, 2205, 2206, 2207, 2209, 2211, 2213, 2217, 2219, 2221, 2225, 2227, 2229, 2231, 2233, 2235, 2237, 2239, 2240, 2242, 2244, 2246, 2248, 2250, 2254, 2256, 2257, 2258, 2259, 2260, 2261, 2263, 2265, 2267, 2269, 2271, 2273, 2275, 2277, 2279, 2281, 2282, 2283, 2285, 2286, 2287, 2288, 2289, 2291, 2293, 2295, 2297, 2299, 2301, 2303, 2304, 2308, 2310, 2312, 2314, 2316, 2318, 2327, 2329, 2331, 2333, 2335, 2337, 2339, 2341, 2343, 2355, 2357, 2359, 2361, 2363, 2367, 2368, 2370, 2372, 2374, 2376, 2380, 2382, 2383, 2384, 2385, 2387, 2388, 2389, 2390, 2391, 2393, 2395, 2397, 2399, 2401, 2403, 2405, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2417, 2418, 2419, 2421, 2423, 2425, 2427, 2429, 2431, 2432, 2434, 2436, 2438, 2439, 2440, 2442, 2443, 2444, 2457, 2459, 2461, 2463, 2465, 2467, 2469, 2474, 2485, 2487, 2489, 2491, 2493, 2495, 2496, 2498, 2500, 2502, 2504, 2506, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2520, 2521, 2523, 2525, 2527, 2529, 2531, 2533, 2534, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2546, 2547, 2548, 2549, 2551, 2553, 2555, 2557, 2559, 2560, 2562, 2564, 2566, 2568, 2570, 2587, 2589, 2591, 2593, 2595, 2607, 2617, 2619, 2621, 2623, 2624, 2626, 2628, 2630, 2632, 2634, 2635, 2636, 2637, 2638, 2639, 2641, 2642, 2643, 2644, 2645, 2646, 2648, 2649, 2650, 2651, 2653, 2655, 2657, 2659, 2661, 2662, 2663, 2664, 2665, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2679, 2681, 2683, 2685, 2687, 2688, 2690, 2692, 2694, 2696, 2717, 2719, 2721, 2723, 2725, 2741, 2743, 2745, 2747, 2749, 2751, 2752, 2754, 2756, 2758, 2760, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2775, 2776, 2777, 2778, 2779, 2781, 2783, 2785, 2787, 2789, 2791, 2792, 2794, 2795, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2805, 2806, 2807, 2809, 2811, 2813, 2815, 2816, 2818, 2820, 2822, 2824, 2826, 2843, 2845, 2847, 2848, 2849, 2851, 2853, 2855, 2859, 2867, 2869, 2871, 2873, 2875, 2877, 2879, 2880, 2882, 2884, 2886, 2888, 2889, 2890, 2892, 2893, 2894, 2895, 2896, 2898, 2899, 2900, 2901, 2903, 2904, 2905, 2907, 2911, 2913, 2915, 2917, 2919, 2921, 2923, 2925, 2926, 2927, 2928, 2929, 2931, 2933, 2935, 2937, 2939, 2941, 2943, 2944, 2946, 2948, 2950, 2952, 2954, 2956, 2960, 2962, 2969, 2971, 2973, 2975, 2977, 2979, 2981, 2983, 2985, 2987, 2989, 2993, 2995, 2997, 2999, 3001, 3003, 3005, 3007, 3008, 3010, 3012, 3014, 3016, 3018, 3020, 3022, 3024, 3026, 3028, 3030, 3031, 3033, 3035, 3037, 3039, 3041, 3043, 3045, 3047, 3049, 3051, 3055, 3057, 3059, 3061, 3063, 3065, 3067, 3069, 3071, 3072, 3074, 3076, 3078, 3080, 3082, 3086, 3090, 3092, 3095, 3099, 3101, 3103, 3105, 3107, 3109, 3111, 3113, 3117, 3119, 3123, 3125, 3127, 3129, 3131, 3133, 3135, 3136, 3138, 3140, 3142, 3146, 3148, 3150, 3152, 3156, 3157, 3159, 3161, 3163, 3165, 3167, 3169, 3171, 3173, 3175, 3177, 3179, 3181, 3183, 3185, 3187, 3191, 3193, 3195, 3197, 3199, 3200, 3202, 3203, 3204, 3206, 3208, 3210, 3212, 3216, 3218, 3225, 3227, 3229, 3231, 3233, 3235, 3237, 3239, 3243, 3245, 3249, 3251, 3253, 3255, 3257, 3259, 3261, 3263, 3264, 3266, 3268, 3272, 3274, 3276, 3277, 3279, 3280, 3282, 3283, 3284, 3285, 3286, 3287, 3289, 3291, 3293, 3295, 3297, 3299, 3301, 3303, 3305, 3306, 3307, 3309, 3310, 3312, 3313, 3315, 3317, 3319, 3321, 3323, 3325, 3327, 3328, 3330, 3332, 3334, 3336, 3338, 3355, 3357, 3359, 3361, 3363, 3365, 3381, 3383, 3385, 3387, 3389, 3391, 3392, 3394, 3396, 3398, 3400, 3402, 3403, 3404, 3405, 3406, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419, 3421, 3423, 3425, 3427, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 3447, 3449, 3451, 3453, 3455, 3456, 3458, 3460, 3461, 3462, 3464, 3485, 3487, 3489, 3491, 3497, 3511, 3513, 3515, 3517, 3519, 3520, 3522, 3524, 3526, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 3555, 3556, 3557, 3558, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 3579, 3581, 3583, 3584, 3586, 3588, 3590, 3615, 3617, 3629, 3641, 3643, 3645, 3647, 3648, 3650, 3652, 3654, 3655, 3656, 3657, 3658, 3659, 3660, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 3696, 3697, 3698, 3699, 3701, 3702, 3703, 3704, 3705, 3707, 3709, 3711, 3712, 3714, 3716, 3721, 3745, 3771, 3773, 3775, 3776, 3778, 3780, 3781, 3782, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830, 3831, 3832, 3833, 3834, 3835, 3837, 3839, 3840, 3842, 3891, 3901, 3903, 3904, 3906, 3907, 3908, 3909, 3910, 3911, 3912, 3913, 3914, 3915, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3967, 3968, 3979, 3988, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4049, 4050, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4061, 4062, 4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4094, 4095
					#walls ranges in numbers from 1 to 4096, They represet the walls of the maze


Winner: .asciiz "Congradulations, You have beaten the Maze!"
Empty: .asciiz ""			#used to keep $a1 in bounds when printing Game Won screen

.text
main:
	###setting up starting position	###
	addi $a0, $0, 0
	addi $a2, $0, WHITE
	jal Start_Loop
	
	###If they reach the green pixel they get the win message###
Game_Won:
	la $a0, Winner
	la $a1, Empty
	li $v0, 59
	syscall
	
Finish_Game:
	li $v0, 10
	syscall
	
###############################################################################################	
Start_Loop:
	jal draw_wall			#draws wall at new locatoin if need to
	
Start_Player:
	addi $a0, $0, 4051		#resetssets the mem location to the exit of the map
	addi $a2, $0, GREEN		#sets the color to green
	jal draw_pix
	addi $a2, $0, RED		#changes color to red to represent player
	addi $a0, $0, 4			#changes mem location to starting location
	jal draw_pix
jump:
	###Checks for player input ###
	lw $t1, 0xFFFF0000 		#t1 holds if input available
	beq $t1, $0, jump 		#if there is no input keep waiting till there is
	lw $t2, 0xFFFF0004 		#$t2 holds value of input (N,E,S,W,SPACE)
	beq $t2, 32, Finish_Game	#if input is a space ends the game
	addi $a2, $0, WHITE 		#sets color to WHITE
	jal draw_pix
	
direction:
	###checks to see which direction the square needs to move###		
	beq $t2, 119, North		#input = w
	beq $t2, 100, East		#input = d
	beq $t2, 115, South		#input = s
	beq $t2, 97, West		#input = a
	
North:
	li $t2, 0
	subi $t2, $a0, HEIGHT		#used to see if next location is a wall
	blt $t2, 0, North_Invalid	#if going out of bounds at the start of the game then skips the movement
	
North_Loop:
	mul $t2, $t2, 4			#gets offset of current location
	lw $t2, MEM($t2)		#gets color of current location of base Mem + location
	beq  $t2, BLACK, North_Invalid 	#if matches location of a wall then invalid move
	j North_Valid

North_Valid:
	subi $a0, $a0, HEIGHT		#if valid removes 64 from mem location
	
North_Invalid:
	j Exit

East:
	li $t2, 0			#t0 = what is being held in the array at the address of $s6 (counter)
	addi $t2, $a0, 1		#used to see if next location is a wall
	
East_Loop:
	mul $t2, $t2, 4			#gets offset of current location
	lw $t2, MEM($t2)		#gets color of current location of base Mem + location
	beq  $t2, BLACK, East_Invalid 	#if matches location of a wall then invalid move
	j East_Valid
	
East_Valid:
	addi $a0, $a0, 1		#if valid adds 1 to mem location
	
East_Invalid:
	j Exit
	
South:
	li $t2, 0			#t0 = what is being held in the array at the address of $s6 (counter)
	addi $t2, $a0, HEIGHT		#used to see if next location is a wall

South_Loop:
	mul $t2, $t2, 4			#gets offset of current location
	lw $t2, MEM($t2)		#gets color of current location of base Mem + location
	beq $t2, GREEN, Game_Won
	beq  $t2, BLACK, South_Invalid 	#if matches location of a wall then invalid move
	j South_Valid
	
South_Valid:
	addi $a0, $a0, HEIGHT		#if valid adds 64 to mem location
	
South_Invalid:
	j Exit
	
West:
	li $t2, 0			#t0 = what is being held in the array at the address of $s6 (counter)
	subi $t2, $a0, 1		#used to see if next location is a wall

West_Loop:
	mul $t2, $t2, 4			#gets offset of current location
	lw $t2, MEM($t2)		#gets color of current location of base Mem + location
	beq  $t2, BLACK, West_Invalid 	#if matches location of a wall then invalid move
	j West_Valid
	
West_Valid:
	subi $a0, $a0, 1		#if valid adds 1 to mem location
	
West_Invalid:
Exit:
	addi $a2, $0, RED 		#sets color to RED
	jal draw_pix
	j jump				#jumps back to scanning for player input
	
###############################################################################################
draw_pix:		
	mul $s1, $a0, 4			# getting offset of 4
	add $s1, $s1, MEM		# $s1 = address = MEM +4(x)
	sw $a2, 0($s1) 
	jr $ra
	
draw_wall:	
	la $s6, walls			#s6 = starting address of walls array
	li $a0, 0			#resets location of pointer in bitmap
	addi $a2, $0, WHITE		#changes the color back to White
	
draw_wall_loop:
	lw $t0, ($s6)			#t0 is the location of the next wall
	beq $a0, 4096, done_draw_walls	#checks to see if $a0 has reached the end of the BitMap
	beq $a0, $t0, No_Wall		#if there is no wall then skip the drawing phase
	jal draw_pix
	addi $s6, $s6, -4		#used to keep at current array section until it has been passed by $a0
	
No_Wall:
	addi $s6, $s6, 4		#gets next element in array
	addi $a0, $a0, 1		#moves the pointer in the BitMap by 1
	j draw_wall_loop
	
done_draw_walls:
	j Start_Player
